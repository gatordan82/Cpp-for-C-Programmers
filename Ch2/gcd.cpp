/**********************************************************************  Filename:  gcd.cpp  Chapter:   2      Native Types and Statements  Compiler:  Borland C++     Version 5.01      Summer 1998  C++ for C Programmers, Edition 3     By Ira Pohl********************************************************************/#include <iostream>#include <string>using namespace std;//Greatest common divisor programint gcd(int m, int n)      //function definition{                          //block   int  r;                 //declaration of remainder   while (n != 0) {        //not equal      r = m % n;           //modulos operator      m = n;               //assignment      n = r;   }                       //end while loop   return m;               //exit gcd with value m}int main(){   int  x, y, g;   cout << "\nPROGRAM Gcd C++";   do {      cout << "\nEnter two integers: ";      cin >> x >> y;      if (x * y == 0)         throw new exception();      cout << "\nGCD(" << x << ", " << y << ") = "           << (g = gcd(x, y)) << endl;   } while (x != y);}