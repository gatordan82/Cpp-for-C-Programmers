/**********************************************************************  Filename:  parabola.cpp  Chapter:   5      Constructors and Destructors  Compiler:  Borland C++     Version 5.01      Summer 1998  C++ for C Programmers, Edition 3     By Ira Pohl********************************************************************/#include <iostream>//using namespace std;class point {public:   point() { x = 0; y = 0; }                   //default   point(double u) { x = u; y = 0;}            //double to point   point(double u, double v) { x = u; y = v; }   void print() { cout << "(" << x << "," << y << ")"; }   void init(double u, double v) { x = u; y = v; }   void plus(point c);private:   double x, y;};void point::plus(point c)     //definition not inline{//offset the existing point by point c   x += c.x;   y += c.y;}double parabola(double x, double p) { return(x * x) / p; }void graph(double a, double b, double incr,   double f(double, double), double p, point gr[]){      double x = a;      for (int i = 0; x <= b; ++i, x += incr)         gr[i].init(x, f(x, p));}int main(){   point g[1000];          //uses the default constructor   graph(0, 2, 0.1, parabola, 5, g );   cout << "First 30 points:" << endl;   for (int i = 0; i < 30; ++i) {      g[i].print();      if (i % 5 == 4)         cout << endl;      else         cout << "  ";  }   int look; cin >> look;}