/**********************************************************************  Filename:  typeid.cpp  Chapter:   8      Inheritance  Compiler:  Borland C++     Version 5.01      Summer 1998  C++ for C Programmers, Edition 3     By Ira Pohl********************************************************************/#include <iostream>#include <typeinfo>//using namespace std;class Base {public:	Base():hide(0){}	void mutate(int i){ hide = i;}	void print()const {cout << "hide in Base = "									 << hide << endl;}private:	int hide;};class Derived: public Base {public:	Derived():Base(),data(0) {}	void mutate(int i){ data = i;}	void print()const {cout << "data in Derived = "	                         << data << endl;}private:	int data;};int main (){   Base* bptr;   //print the type name of what bptr currently points at   cout << typeid(bptr).name() << endl;   cout << typeid(Derived).name() << endl;   if (typeid(bptr) == typeid(Derived))    //do something appropriate for Derived      cout << "type bprt & Derived same" << endl;   int look; cin >> look;}