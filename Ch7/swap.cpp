/**********************************************************************  Filename:  swap.cpp  Chapter:   7      Templates Generic Programming and STL  Compiler:  Borland C++     Version 5.01      Summer 1998  C++ for C Programmers, Edition 3     By Ira Pohl********************************************************************/#include <iostream>#include <string>using namespace std;//generic swaptemplate <class T>void swap(T& x, T& y){   T  temp;   temp = x;   x = y;   y = temp;}void swap(char* s1, char* s2){   int  max_len;   max_len = (strlen(s1) >= strlen(s2)) ?              strlen(s1) : strlen(s2);   char* temp = new char[max_len + 1];   strcpy(temp, s1);   strcpy(s1, s2);   strcpy(s2, temp);   delete []temp;}int main(){   int      i, j;   char     str1[100],  str2[100], ch, ch2;   i = 0;   j = 1;   ch = 'A';   ch2 = 'B';   strcpy(str1, "ABCD");   strcpy(str2, "EFGHIJKL");   cout << "\nints:     " << i     << '\t' << j;   cout << "\nchars:    " << ch   << '\t' << ch2;   cout << "\nstrings:  " << str1  << '\t' << str2;   swap(i, j);                //i j int -  okay   swap(str1[50], str2[33]);  //both char variables -okay   swap(i, ch);               //i int ch char - illegal   swap(str1, str2);          //illegal   cout << "\nints:     " << i     << '\t' << j;   cout << "\nchars:    " << ch   << '\t' << ch2;   cout << "\nstrings:  " << str1  << '\t' << str2;   int look; cin >> look;}