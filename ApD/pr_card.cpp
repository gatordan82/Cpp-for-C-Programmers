/**********************************************************************  Filename:  pr_card.cpp  Chapter:   E      Appendix E - Input/Output  Compiler:  Borland C++     Version 5.01      Summer 1998  C++ for C Programmers, Edition 3     By Ira Pohl********************************************************************/#include <iostream>#include <stdlib>//#include <//using namespace std;//card outputchar  pips_symbol[14] = { '?', 'A', '2', '3', '4',        '5', '6', '7', '8', '9', 'T', 'J', 'Q', 'K' };char  suit_symbol[4] = { 'c', 'd', 'h', 's' };enum suit { clubs, diamonds, hearts, spades };class pips {public:   void  assign(int n) { p = n % 13 + 1; }   void  print() { cout << pips_symbol[p]; }private:   int  p;};class card {public:   suit  s;   pips  p;   void  assign(int n)      { cd = n; s = suit(n / 13); p.assign(n); }   void  pr_card()      { p.print(); cout << suit_symbol[s] << "  "; }private:   int  cd;                 //a cd is from 0 to 51};class deck {public:   void  init_deck();   void  shuffle();   void  deal(int, int, card*);   void  pr_deck();private:   card d[52];};void deck::pr_deck(){   for (int i = 0; i < 52; ++i) {      if (i % 13 == 0)      //13 cards to a line         cout << endl;      d[i].pr_card();   }}void  deck::init_deck(){   for(int i = 0; i < 52; ++i)      d[i].assign(i);}void  deck::shuffle(){   for (int i = 0; i < 52; ++i) {      int k = rand() % 52;      card t = d[i]; d[i] = d[k]; d[k] = t; //swap two cards   }}void deck::deal(int n, int pos, card *hand){   for(int i = pos; i < pos +n; ++i)      hand[i - pos] = d[i];}int main(){   deck dk;   randomize();   dk.init_deck();   dk.pr_deck();    // print using named function   int look; cin >> look;}