/**********************************************************************  Filename:  clock.cpp  Chapter:   6      Operator Overloading and Conversions  Compiler:  Borland C++     Version 5.01      Summer 1998  C++ for C Programmers, Edition 3     By Ira Pohl********************************************************************/#include <iostream>#include <assert>//using namespace std;class clock {public:   clock(unsigned long i);      //construct & conversion   void  print() const;         //formatted printout   void  tick();                //add one second   clock  operator++() { tick(); return *this; }   friend clock  operator+(clock c1, clock c2);   friend clock  operator*(unsigned long m, clock c);   friend clock  operator*(clock c, unsigned long m);   clock  operator-(clock c);private:   unsigned long  tot_secs, secs, mins, hours, days;};inline clock::clock(unsigned long i){   tot_secs = i;   secs = tot_secs % 60;   mins = (tot_secs / 60) % 60;   hours = (tot_secs / 3600) % 24;   days = tot_secs / 86400;}void clock::tick(){   clock  temp = clock(++tot_secs);   secs = temp.secs;   mins = temp.mins;   hours = temp.hours;   days = temp.days;}clock clock::operator-(clock c){   return (tot_secs - c.tot_secs);}clock operator+(clock c1, clock c2){   return (c1.tot_secs + c2.tot_secs);}clock operator*(unsigned long m, clock c){   return (m * c.tot_secs);}clock operator*(clock c, unsigned long m){   return (m * c.tot_secs);}void clock::print() const{   cout << days << " d :" << hours << " h :"        << mins << " m :" << secs << " s" << endl;}//Clock and overloaded operatorsint main(){   clock  t1(59), t2(172799), t3(60); //172799 = 2 days-1 sec   cout << "initial times are" << endl;   t1.print();   t2.print();   ++t1;  ++t2;   cout << "after one second times are" << endl;   t1.print();   t2.print();   t3 = t2 + t1;   cout << "t2 + t1 = " ;   t3.print();   t3 = t2 * 10;   cout << "t2 * 10 = " ;   t3. print();   t3 = t1 * 10;   cout << "t1 * 10 = " ;   t3. print();   int look; cin >> look;}